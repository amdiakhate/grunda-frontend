/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsListImport } from './routes/products/list'
import { Route as ProductsDetailImport } from './routes/products/detail'
import { Route as AdminDashboardImport } from './routes/admin/dashboard'
import { Route as AdminUsersIndexImport } from './routes/admin/users/index'
import { Route as AdminProductsIndexImport } from './routes/admin/products/index'
import { Route as AdminProductMaterialsIndexImport } from './routes/admin/product-materials/index'
import { Route as AdminMaterialsIndexImport } from './routes/admin/materials/index'
import { Route as AdminMaterialMappingsIndexImport } from './routes/admin/material-mappings/index'
import { Route as ProductsStepsUploadFileImport } from './routes/products/steps/upload-file'
import { Route as ProductsImportsListImport } from './routes/products/imports/list'
import { Route as AdminProductsIdImport } from './routes/admin/products/$id'
import { Route as AdminProductMaterialsIdImport } from './routes/admin/product-materials/$id'
import { Route as AdminMaterialsIdImport } from './routes/admin/materials/$id'
import { Route as AdminMaterialMappingsIdImport } from './routes/admin/material-mappings/$id'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsListRoute = ProductsListImport.update({
  id: '/products/list',
  path: '/products/list',
  getParentRoute: () => rootRoute,
} as any)

const ProductsDetailRoute = ProductsDetailImport.update({
  id: '/products/detail',
  path: '/products/detail',
  getParentRoute: () => rootRoute,
} as any)

const AdminDashboardRoute = AdminDashboardImport.update({
  id: '/admin/dashboard',
  path: '/admin/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsIndexRoute = AdminProductsIndexImport.update({
  id: '/admin/products/',
  path: '/admin/products/',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductMaterialsIndexRoute = AdminProductMaterialsIndexImport.update(
  {
    id: '/admin/product-materials/',
    path: '/admin/product-materials/',
    getParentRoute: () => rootRoute,
  } as any,
)

const AdminMaterialsIndexRoute = AdminMaterialsIndexImport.update({
  id: '/admin/materials/',
  path: '/admin/materials/',
  getParentRoute: () => rootRoute,
} as any)

const AdminMaterialMappingsIndexRoute = AdminMaterialMappingsIndexImport.update(
  {
    id: '/admin/material-mappings/',
    path: '/admin/material-mappings/',
    getParentRoute: () => rootRoute,
  } as any,
)

const ProductsStepsUploadFileRoute = ProductsStepsUploadFileImport.update({
  id: '/products/steps/upload-file',
  path: '/products/steps/upload-file',
  getParentRoute: () => rootRoute,
} as any)

const ProductsImportsListRoute = ProductsImportsListImport.update({
  id: '/products/imports/list',
  path: '/products/imports/list',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductsIdRoute = AdminProductsIdImport.update({
  id: '/admin/products/$id',
  path: '/admin/products/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminProductMaterialsIdRoute = AdminProductMaterialsIdImport.update({
  id: '/admin/product-materials/$id',
  path: '/admin/product-materials/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminMaterialsIdRoute = AdminMaterialsIdImport.update({
  id: '/admin/materials/$id',
  path: '/admin/materials/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminMaterialMappingsIdRoute = AdminMaterialMappingsIdImport.update({
  id: '/admin/material-mappings/$id',
  path: '/admin/material-mappings/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/dashboard': {
      id: '/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardImport
      parentRoute: typeof rootRoute
    }
    '/products/detail': {
      id: '/products/detail'
      path: '/products/detail'
      fullPath: '/products/detail'
      preLoaderRoute: typeof ProductsDetailImport
      parentRoute: typeof rootRoute
    }
    '/products/list': {
      id: '/products/list'
      path: '/products/list'
      fullPath: '/products/list'
      preLoaderRoute: typeof ProductsListImport
      parentRoute: typeof rootRoute
    }
    '/admin/material-mappings/$id': {
      id: '/admin/material-mappings/$id'
      path: '/admin/material-mappings/$id'
      fullPath: '/admin/material-mappings/$id'
      preLoaderRoute: typeof AdminMaterialMappingsIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/materials/$id': {
      id: '/admin/materials/$id'
      path: '/admin/materials/$id'
      fullPath: '/admin/materials/$id'
      preLoaderRoute: typeof AdminMaterialsIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/product-materials/$id': {
      id: '/admin/product-materials/$id'
      path: '/admin/product-materials/$id'
      fullPath: '/admin/product-materials/$id'
      preLoaderRoute: typeof AdminProductMaterialsIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/$id': {
      id: '/admin/products/$id'
      path: '/admin/products/$id'
      fullPath: '/admin/products/$id'
      preLoaderRoute: typeof AdminProductsIdImport
      parentRoute: typeof rootRoute
    }
    '/products/imports/list': {
      id: '/products/imports/list'
      path: '/products/imports/list'
      fullPath: '/products/imports/list'
      preLoaderRoute: typeof ProductsImportsListImport
      parentRoute: typeof rootRoute
    }
    '/products/steps/upload-file': {
      id: '/products/steps/upload-file'
      path: '/products/steps/upload-file'
      fullPath: '/products/steps/upload-file'
      preLoaderRoute: typeof ProductsStepsUploadFileImport
      parentRoute: typeof rootRoute
    }
    '/admin/material-mappings/': {
      id: '/admin/material-mappings/'
      path: '/admin/material-mappings'
      fullPath: '/admin/material-mappings'
      preLoaderRoute: typeof AdminMaterialMappingsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/materials/': {
      id: '/admin/materials/'
      path: '/admin/materials'
      fullPath: '/admin/materials'
      preLoaderRoute: typeof AdminMaterialsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/product-materials/': {
      id: '/admin/product-materials/'
      path: '/admin/product-materials'
      fullPath: '/admin/product-materials'
      preLoaderRoute: typeof AdminProductMaterialsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/products/': {
      id: '/admin/products/'
      path: '/admin/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/products/detail': typeof ProductsDetailRoute
  '/products/list': typeof ProductsListRoute
  '/admin/material-mappings/$id': typeof AdminMaterialMappingsIdRoute
  '/admin/materials/$id': typeof AdminMaterialsIdRoute
  '/admin/product-materials/$id': typeof AdminProductMaterialsIdRoute
  '/admin/products/$id': typeof AdminProductsIdRoute
  '/products/imports/list': typeof ProductsImportsListRoute
  '/products/steps/upload-file': typeof ProductsStepsUploadFileRoute
  '/admin/material-mappings': typeof AdminMaterialMappingsIndexRoute
  '/admin/materials': typeof AdminMaterialsIndexRoute
  '/admin/product-materials': typeof AdminProductMaterialsIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/products/detail': typeof ProductsDetailRoute
  '/products/list': typeof ProductsListRoute
  '/admin/material-mappings/$id': typeof AdminMaterialMappingsIdRoute
  '/admin/materials/$id': typeof AdminMaterialsIdRoute
  '/admin/product-materials/$id': typeof AdminProductMaterialsIdRoute
  '/admin/products/$id': typeof AdminProductsIdRoute
  '/products/imports/list': typeof ProductsImportsListRoute
  '/products/steps/upload-file': typeof ProductsStepsUploadFileRoute
  '/admin/material-mappings': typeof AdminMaterialMappingsIndexRoute
  '/admin/materials': typeof AdminMaterialsIndexRoute
  '/admin/product-materials': typeof AdminProductMaterialsIndexRoute
  '/admin/products': typeof AdminProductsIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/about': typeof AboutLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/admin/dashboard': typeof AdminDashboardRoute
  '/products/detail': typeof ProductsDetailRoute
  '/products/list': typeof ProductsListRoute
  '/admin/material-mappings/$id': typeof AdminMaterialMappingsIdRoute
  '/admin/materials/$id': typeof AdminMaterialsIdRoute
  '/admin/product-materials/$id': typeof AdminProductMaterialsIdRoute
  '/admin/products/$id': typeof AdminProductsIdRoute
  '/products/imports/list': typeof ProductsImportsListRoute
  '/products/steps/upload-file': typeof ProductsStepsUploadFileRoute
  '/admin/material-mappings/': typeof AdminMaterialMappingsIndexRoute
  '/admin/materials/': typeof AdminMaterialsIndexRoute
  '/admin/product-materials/': typeof AdminProductMaterialsIndexRoute
  '/admin/products/': typeof AdminProductsIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/about'
    | '/settings'
    | '/admin/dashboard'
    | '/products/detail'
    | '/products/list'
    | '/admin/material-mappings/$id'
    | '/admin/materials/$id'
    | '/admin/product-materials/$id'
    | '/admin/products/$id'
    | '/products/imports/list'
    | '/products/steps/upload-file'
    | '/admin/material-mappings'
    | '/admin/materials'
    | '/admin/product-materials'
    | '/admin/products'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/about'
    | '/settings'
    | '/admin/dashboard'
    | '/products/detail'
    | '/products/list'
    | '/admin/material-mappings/$id'
    | '/admin/materials/$id'
    | '/admin/product-materials/$id'
    | '/admin/products/$id'
    | '/products/imports/list'
    | '/products/steps/upload-file'
    | '/admin/material-mappings'
    | '/admin/materials'
    | '/admin/product-materials'
    | '/admin/products'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/about'
    | '/settings'
    | '/admin/dashboard'
    | '/products/detail'
    | '/products/list'
    | '/admin/material-mappings/$id'
    | '/admin/materials/$id'
    | '/admin/product-materials/$id'
    | '/admin/products/$id'
    | '/products/imports/list'
    | '/products/steps/upload-file'
    | '/admin/material-mappings/'
    | '/admin/materials/'
    | '/admin/product-materials/'
    | '/admin/products/'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  AboutLazyRoute: typeof AboutLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  AdminDashboardRoute: typeof AdminDashboardRoute
  ProductsDetailRoute: typeof ProductsDetailRoute
  ProductsListRoute: typeof ProductsListRoute
  AdminMaterialMappingsIdRoute: typeof AdminMaterialMappingsIdRoute
  AdminMaterialsIdRoute: typeof AdminMaterialsIdRoute
  AdminProductMaterialsIdRoute: typeof AdminProductMaterialsIdRoute
  AdminProductsIdRoute: typeof AdminProductsIdRoute
  ProductsImportsListRoute: typeof ProductsImportsListRoute
  ProductsStepsUploadFileRoute: typeof ProductsStepsUploadFileRoute
  AdminMaterialMappingsIndexRoute: typeof AdminMaterialMappingsIndexRoute
  AdminMaterialsIndexRoute: typeof AdminMaterialsIndexRoute
  AdminProductMaterialsIndexRoute: typeof AdminProductMaterialsIndexRoute
  AdminProductsIndexRoute: typeof AdminProductsIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  AboutLazyRoute: AboutLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  AdminDashboardRoute: AdminDashboardRoute,
  ProductsDetailRoute: ProductsDetailRoute,
  ProductsListRoute: ProductsListRoute,
  AdminMaterialMappingsIdRoute: AdminMaterialMappingsIdRoute,
  AdminMaterialsIdRoute: AdminMaterialsIdRoute,
  AdminProductMaterialsIdRoute: AdminProductMaterialsIdRoute,
  AdminProductsIdRoute: AdminProductsIdRoute,
  ProductsImportsListRoute: ProductsImportsListRoute,
  ProductsStepsUploadFileRoute: ProductsStepsUploadFileRoute,
  AdminMaterialMappingsIndexRoute: AdminMaterialMappingsIndexRoute,
  AdminMaterialsIndexRoute: AdminMaterialsIndexRoute,
  AdminProductMaterialsIndexRoute: AdminProductMaterialsIndexRoute,
  AdminProductsIndexRoute: AdminProductsIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/login",
        "/about",
        "/settings",
        "/admin/dashboard",
        "/products/detail",
        "/products/list",
        "/admin/material-mappings/$id",
        "/admin/materials/$id",
        "/admin/product-materials/$id",
        "/admin/products/$id",
        "/products/imports/list",
        "/products/steps/upload-file",
        "/admin/material-mappings/",
        "/admin/materials/",
        "/admin/product-materials/",
        "/admin/products/",
        "/admin/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/admin/dashboard": {
      "filePath": "admin/dashboard.tsx"
    },
    "/products/detail": {
      "filePath": "products/detail.tsx"
    },
    "/products/list": {
      "filePath": "products/list.tsx"
    },
    "/admin/material-mappings/$id": {
      "filePath": "admin/material-mappings/$id.tsx"
    },
    "/admin/materials/$id": {
      "filePath": "admin/materials/$id.tsx"
    },
    "/admin/product-materials/$id": {
      "filePath": "admin/product-materials/$id.tsx"
    },
    "/admin/products/$id": {
      "filePath": "admin/products/$id.tsx"
    },
    "/products/imports/list": {
      "filePath": "products/imports/list.tsx"
    },
    "/products/steps/upload-file": {
      "filePath": "products/steps/upload-file.tsx"
    },
    "/admin/material-mappings/": {
      "filePath": "admin/material-mappings/index.tsx"
    },
    "/admin/materials/": {
      "filePath": "admin/materials/index.tsx"
    },
    "/admin/product-materials/": {
      "filePath": "admin/product-materials/index.tsx"
    },
    "/admin/products/": {
      "filePath": "admin/products/index.tsx"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
